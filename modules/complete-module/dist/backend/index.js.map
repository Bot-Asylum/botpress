{"version":3,"sources":["index.ts"],"names":["onServerStarted","bp","onServerReady","onBotMount","botId","onFlowChanged","flow","botTemplates","id","name","desc","skills","entryPoint","definition","menuIcon","menuText","noInterface","fullName","homepage"],"mappings":";;;;;;;AAEA;;;;AAEA;AACA,MAAMA,eAAe,GAAG,MAAOC,EAAP,IAA0B,CAAE,CAApD,C,CAEA;;;AACA,MAAMC,aAAa,GAAG,MAAOD,EAAP,IAA0B;AAC9C,QAAM,kBAAIA,EAAJ,CAAN;AACD,CAFD,C,CAIA;;;AACA,MAAME,UAAU,GAAG,OAAOF,EAAP,EAAuBG,KAAvB,KAAyC,CAAE,CAA9D,C,CAEA;AACA;AAEA;;;AACA,MAAMC,aAAa,GAAG,OAAOJ,EAAP,EAAuBG,KAAvB,EAAsCE,IAAtC,KAAyD,CAAE,CAAjF;AAEA;;;;;;AAIA,MAAMC,YAA+B,GAAG,CAAC;AAAEC,EAAAA,EAAE,EAAE,aAAN;AAAqBC,EAAAA,IAAI,EAAE,UAA3B;AAAuCC,EAAAA,IAAI,EAAG;AAA9C,CAAD,CAAxC;AAEA;;;;;AAIA,MAAMC,MAAmB,GAAG,EAA5B;AAEA,MAAMC,UAAgC,GAAG;AACvCZ,EAAAA,eADuC;AAEvCE,EAAAA,aAFuC;AAGvCC,EAAAA,UAHuC;AAIvC;AACAE,EAAAA,aALuC;AAMvCE,EAAAA,YANuC;AAOvCI,EAAAA,MAPuC;AAQvCE,EAAAA,UAAU,EAAE;AACV;AACAJ,IAAAA,IAAI,EAAE,iBAFI;;AAGV;;;;AAIAK,IAAAA,QAAQ,EAAE,MAPA;AAQV;AACAC,IAAAA,QAAQ,EAAE,iBATA;AAUV;AACAC,IAAAA,WAAW,EAAE,KAXH;AAYV;AACAC,IAAAA,QAAQ,EAAE,iBAbA;AAcV;AACAC,IAAAA,QAAQ,EAAE;AAfA;AAR2B,CAAzC;eA2BeN,U","sourceRoot":"/home/melvit/projects/botpress/modules/complete-module/src/backend","sourcesContent":["import * as sdk from 'botpress/sdk'\n\nimport api from './api'\n\n// This is called when server is started, usually to set up the database\nconst onServerStarted = async (bp: typeof sdk) => {}\n\n// At this point, you would likely setup the API route of your module.\nconst onServerReady = async (bp: typeof sdk) => {\n  await api(bp)\n}\n\n// Every time a bot is created (or enabled), this method will be called with the bot id\nconst onBotMount = async (bp: typeof sdk, botId: string) => {}\n\n// This is called every time a bot is deleted (or disabled)\n//const onBotUnmount = async (botId: string) => {}\n\n// When anything is changed using the flow editor, this is called with the new flow, so you can rename nodes if you reference them\nconst onFlowChanged = async (bp: typeof sdk, botId: string, flow: sdk.Flow) => {}\n\n/**\n * This is where you would include your 'demo-bot' definitions.\n * You can copy the content of any existing bot and mark them as \"templates\", so you can create multiple bots from the same template.\n */\nconst botTemplates: sdk.BotTemplate[] = [{ id: 'my_bot_demo', name: 'Bot Demo', desc: `Some description` }]\n\n/**\n * Skills allows you to create custom logic and use them easily on the flow editor\n * Check this link for more information: https://botpress.com/docs/developers/create-module/#skill-creation\n */\nconst skills: sdk.Skill[] = []\n\nconst entryPoint: sdk.ModuleEntryPoint = {\n  onServerStarted,\n  onServerReady,\n  onBotMount,\n  //  onBotUnmount,\n  onFlowChanged,\n  botTemplates,\n  skills,\n  definition: {\n    // This must match the name of your module's folder, and the name in package.json\n    name: 'complete-module',\n    /**\n     * When menuIcon is set to `custom`, you need to provide an icon. It must be at that location: `/assets/icon.png`\n     * Otherwise, use Material icons name: https://material.io/tools/icons/?style=baseline\n     */\n    menuIcon: 'flag',\n    // This is the name of your module which will be displayed in the sidebar\n    menuText: 'Complete Module',\n    // When set to `true`, the name and icon of your module won't be displayed in the sidebar\n    noInterface: false,\n    // The full name is used in other places, for example when displaying bot templates\n    fullName: 'Complete Module',\n    // Not used anywhere, but should be a link to your website or module repository\n    homepage: 'https://botpress.com'\n  }\n}\n\nexport default entryPoint\n"]}