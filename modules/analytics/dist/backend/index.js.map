{"version":3,"sources":["index.ts"],"names":["analyticsByBot","interactionsToTrack","onServerStarted","bp","onServerReady","onBotMount","botId","analytics","Analytics","start","onBotUnmount","stop","onModuleUnmount","events","removeMiddleware","http","deleteRouterForBot","entryPoint","definition","name","fullName","homepage","menuIcon","menuText"],"mappings":";;;;;;;AAAA;;AAIA;;AACA;;AACA;;;;AAGA,MAAMA,cAA8B,GAAG,EAAvC;AAEA,MAAMC,mBAAmB,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,QAApB,EAA8B,UAA9B,EAA0C,aAA1C,EAAyD,UAAzD,CAA5B;;AAEA,MAAMC,eAAe,GAAG,MAAOC,EAAP,IAA0B;AAChD,QAAM,oBAAMA,EAAN,EAAUF,mBAAV,CAAN;AACD,CAFD;;AAIA,MAAMG,aAAa,GAAG,MAAOD,EAAP,IAA0B;AAC9C,QAAM,kBAAIA,EAAJ,EAAQH,cAAR,CAAN;AACD,CAFD;;AAIA,MAAMK,UAAU,GAAG,OAAOF,EAAP,EAAuBG,KAAvB,KAAyC;AAC1D,QAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAcL,EAAd,EAAkBG,KAAlB,CAAlB;AACAN,EAAAA,cAAc,CAACM,KAAD,CAAd,GAAwBC,SAAxB;AACA,QAAMA,SAAS,CAACE,KAAV,EAAN;AACD,CAJD;;AAMA,MAAMC,YAAY,GAAG,OAAOP,EAAP,EAAuBG,KAAvB,KAAyC;AAC5D,QAAMN,cAAc,CAACM,KAAD,CAAd,CAAsBK,IAAtB,EAAN;AACA,SAAOX,cAAc,CAACM,KAAD,CAArB;AACD,CAHD;;AAKA,MAAMM,eAAe,GAAG,MAAOT,EAAP,IAA0B;AAChDA,EAAAA,EAAE,CAACU,MAAH,CAAUC,gBAAV,CAA2B,oBAA3B;AACAX,EAAAA,EAAE,CAACU,MAAH,CAAUC,gBAAV,CAA2B,oBAA3B;AACAX,EAAAA,EAAE,CAACY,IAAH,CAAQC,kBAAR,CAA2B,WAA3B;AACD,CAJD;;AAMA,MAAMC,UAAgC,GAAG;AACvCf,EAAAA,eADuC;AAEvCE,EAAAA,aAFuC;AAGvCC,EAAAA,UAHuC;AAIvCK,EAAAA,YAJuC;AAKvCE,EAAAA,eALuC;AAMvCM,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE,WADI;AAEVC,IAAAA,QAAQ,EAAE,WAFA;AAGVC,IAAAA,QAAQ,EAAE,qBAHA;AAIVC,IAAAA,QAAQ,EAAE,UAJA;AAKVC,IAAAA,QAAQ,EAAE;AALA;AAN2B,CAAzC;eAeeN,U","sourceRoot":"/Users/renaud/Code/Botpress/botpress/modules/analytics/src/backend","sourcesContent":["import 'bluebird-global'\nimport * as sdk from 'botpress'\nimport _ from 'lodash'\n\nimport Analytics from './analytics'\nimport api from './api'\nimport setup from './setup'\nimport { AnalyticsByBot } from './typings'\n\nconst analyticsByBot: AnalyticsByBot = {}\n\nconst interactionsToTrack = ['message', 'text', 'button', 'template', 'quick_reply', 'postback']\n\nconst onServerStarted = async (bp: typeof sdk) => {\n  await setup(bp, interactionsToTrack)\n}\n\nconst onServerReady = async (bp: typeof sdk) => {\n  await api(bp, analyticsByBot)\n}\n\nconst onBotMount = async (bp: typeof sdk, botId: string) => {\n  const analytics = new Analytics(bp, botId)\n  analyticsByBot[botId] = analytics\n  await analytics.start()\n}\n\nconst onBotUnmount = async (bp: typeof sdk, botId: string) => {\n  await analyticsByBot[botId].stop()\n  delete analyticsByBot[botId]\n}\n\nconst onModuleUnmount = async (bp: typeof sdk) => {\n  bp.events.removeMiddleware('analytics.incoming')\n  bp.events.removeMiddleware('analytics.outgoing')\n  bp.http.deleteRouterForBot('analytics')\n}\n\nconst entryPoint: sdk.ModuleEntryPoint = {\n  onServerStarted,\n  onServerReady,\n  onBotMount,\n  onBotUnmount,\n  onModuleUnmount,\n  definition: {\n    name: 'analytics',\n    fullName: 'Analytics',\n    homepage: 'https://botpress.io',\n    menuIcon: 'timeline',\n    menuText: 'Analytics'\n  }\n}\n\nexport default entryPoint\n"]}